Харківський університет радіоелектроніки Факультет комп'ютерних наук 
Кафедра програмної інженерії





ЗВІТ
до практичної роботи №2 з дисципліни «Архітектура програмного забезпечення»
на тему: «Архітектура Telegram» 







Виконав ст. гр ПЗПІ-22-2 Верясов Владислав Олексійович

Перевірив
Доцент кафедри ПІ Лещинський Володимир Олександрович 







Харків 2025

МЕТА


Метою даної роботи є ознайомлення з архітектурою побудови Telegram — одного з найпопулярніших сучасних месенджерів, що відзначається високою продуктивністю, масштабованістю та безпекою. 
Telegram вирізняється своєю власною архітектурою обміну повідомленнями та унікальним протоколом MTProto, який забезпечує ефективну передачу та шифрування даних. 
Основна задача полягає у вивченні того, як влаштована серверна інфраструктура Telegram, як реалізовано зберігання та передавання повідомлень, які мови програмування та фреймворки застосовано, а також які API доступні для розробників.
Робота також передбачає дослідження протоколу MTProto — ключового елементу, що забезпечує безпечний та швидкий обмін повідомленнями.

ЗАВДАННЯ


Завданням практичної роботи є дослідження архітектури Telegram та протоколу MTProto, включаючи структуру серверної інфраструктури, методи зберігання повідомлень,
способи шифрування, особливості обробки хмарних і секретних чатів, а також розгляд технічного стеку і доступних API.

ХІД РОБОТИ


Telegram — це хмарний месенджер, орієнтований на безпеку, швидкість і стабільну роботу з великим навантаженням. Він має клієнт-серверну архітектуру з розподіленою серверною інфраструктурою по всьому світу. 
Telegram використовує власний протокол передачі даних MTProto 2.0, який забезпечує наскрізне шифрування (end-to-end) для секретних чатів і серверне шифрування для звичайних (хмарних) чатів. 
Повідомлення в хмарних чатах зберігаються на серверах і синхронізуються між пристроями, тоді як секретні чати існують лише на пристроях користувачів.
MTProto складається з трьох основних частин: високорівневого API, мови опису типів, а також блоку авторизації та шифрування (C&A). 
Авторизаційний ключ (AK) використовується для шифрування хмарних повідомлень, а у секретних чатах обмінюються симетричними ключами (SK) напряму між клієнтами. 
Повідомлення проходять через модуль шифрування і передаються через транспортний рівень, який підтримує TCP, UDP, HTTPS і WebSocket — це забезпечує гнучкість у виборі мережевого шляху.
Серверна частина Telegram написана переважно на C++ і Java, клієнти — на Swift (iOS), Kotlin/Java (Android) та JavaScript (Web). 
Для зберігання даних використовуються PostgreSQL, MongoDB, Redis, а для обробки подій — Kafka або RabbitMQ. 
Telegram також надає розробникам потужний набір API, зокрема Bot API для створення ботів, MTProto API для кастомних клієнтів, Payments API для прийому платежів та Passport API для перевірки особи. 
Загалом система здатна обробляти понад 1 мільярд повідомлень на день і має понад 250 мільйонів активних користувачів щодня, при цьому її щомісячне використання трафіку досягає 50 петабайтів.

ВИСНОВКИ


У процесі виконання даної роботи було детально розглянуто архітектуру Telegram та механізми функціонування протоколу MTProto. 
Telegram демонструє приклад сучасного високонавантаженого застосунку з гнучкою, масштабованою і безпечною архітектурою. 
Протокол MTProto поєднує ефективну передачу даних з надійним шифруванням, що дозволяє забезпечити як зручність для користувачів, так і високий рівень конфіденційності. 
Telegram також надає розвинуту серверну інфраструктуру, побудовану з використанням сучасних технологій і мов програмування. 
Ці особливості роблять Telegram однією з найпотужніших та найінноваційніших платформ для обміну повідомленнями у світі.







